// <auto-generated />
using System;
using ForumApp.Core.Models;
using ForumApp.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ForumApp.Migrations
{
    [DbContext(typeof(ForumContext))]
    [Migration("20221226143951_m3")]
    partial class m3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ForumApp.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("PostID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PostID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ForumApp.Models.Community", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Communities");
                });

            modelBuilder.Entity("ForumApp.Models.ConnectionCommunityUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CommunityID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommunityID");

                    b.HasIndex("UserID");

                    b.ToTable("ConnectionCommunityUser");
                });

            modelBuilder.Entity("ForumApp.Models.DislikeComment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CommnetID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommnetID");

                    b.HasIndex("UserID");

                    b.ToTable("DislikeComments");
                });

            modelBuilder.Entity("ForumApp.Models.DislikePost", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("PostID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PostID");

                    b.HasIndex("UserID");

                    b.ToTable("DislikePosts");
                });

            modelBuilder.Entity("ForumApp.Models.LikeComment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CommnetID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommnetID");

                    b.HasIndex("UserID");

                    b.ToTable("LikeComments");
                });

            modelBuilder.Entity("ForumApp.Models.LikePost", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("PostID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PostID");

                    b.HasIndex("UserID");

                    b.ToTable("LikePosts");
                });

            modelBuilder.Entity("ForumApp.Models.Post", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CommunityID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopicID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommunityID");

                    b.HasIndex("TopicID");

                    b.HasIndex("UserID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ForumApp.Models.Topic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("ForumApp.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ForumApp.Models.Comment", b =>
                {
                    b.HasOne("ForumApp.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostID");

                    b.HasOne("ForumApp.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserID");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumApp.Models.ConnectionCommunityUser", b =>
                {
                    b.HasOne("ForumApp.Models.Community", "Community")
                        .WithMany("Users")
                        .HasForeignKey("CommunityID");

                    b.HasOne("ForumApp.Models.User", "User")
                        .WithMany("Communities")
                        .HasForeignKey("UserID");

                    b.Navigation("Community");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumApp.Models.DislikeComment", b =>
                {
                    b.HasOne("ForumApp.Models.Comment", "Commnet")
                        .WithMany("DislikeComments")
                        .HasForeignKey("CommnetID");

                    b.HasOne("ForumApp.Models.User", "User")
                        .WithMany("DislikeComments")
                        .HasForeignKey("UserID");

                    b.Navigation("Commnet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumApp.Models.DislikePost", b =>
                {
                    b.HasOne("ForumApp.Models.Post", "Post")
                        .WithMany("Dislikes")
                        .HasForeignKey("PostID");

                    b.HasOne("ForumApp.Models.User", "User")
                        .WithMany("DislikePosts")
                        .HasForeignKey("UserID");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumApp.Models.LikeComment", b =>
                {
                    b.HasOne("ForumApp.Models.Comment", "Commnet")
                        .WithMany("LikeComments")
                        .HasForeignKey("CommnetID");

                    b.HasOne("ForumApp.Models.User", "User")
                        .WithMany("LikeComments")
                        .HasForeignKey("UserID");

                    b.Navigation("Commnet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumApp.Models.LikePost", b =>
                {
                    b.HasOne("ForumApp.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostID");

                    b.HasOne("ForumApp.Models.User", "User")
                        .WithMany("LikePosts")
                        .HasForeignKey("UserID");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumApp.Models.Post", b =>
                {
                    b.HasOne("ForumApp.Models.Community", "Community")
                        .WithMany("Posts")
                        .HasForeignKey("CommunityID");

                    b.HasOne("ForumApp.Models.Topic", "Topic")
                        .WithMany("Posts")
                        .HasForeignKey("TopicID");

                    b.HasOne("ForumApp.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserID");

                    b.Navigation("Community");

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ForumApp.Models.Comment", b =>
                {
                    b.Navigation("DislikeComments");

                    b.Navigation("LikeComments");
                });

            modelBuilder.Entity("ForumApp.Models.Community", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ForumApp.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Dislikes");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("ForumApp.Models.Topic", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("ForumApp.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Communities");

                    b.Navigation("DislikeComments");

                    b.Navigation("DislikePosts");

                    b.Navigation("LikeComments");

                    b.Navigation("LikePosts");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
